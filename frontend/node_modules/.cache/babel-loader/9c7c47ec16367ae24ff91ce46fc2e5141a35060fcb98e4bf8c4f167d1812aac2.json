{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/\\u5434\\u5929\\u7FFC/OneDrive/\\u684C\\u9762/\\u5F02\\u5E38\\u68C0\\u6D4B/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/\\u5434\\u5929\\u7FFC/OneDrive/\\u684C\\u9762/\\u5F02\\u5E38\\u68C0\\u6D4B/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/\\u5434\\u5929\\u7FFC/OneDrive/\\u684C\\u9762/\\u5F02\\u5E38\\u68C0\\u6D4B/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport AppLayout from '@/components/AppLayout.vue';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'Register',\n  components: {\n    AppLayout: AppLayout\n  },\n  data: function data() {\n    var _this = this;\n    // 确认密码的验证规则\n    var validateConfirmPassword = function validateConfirmPassword(rule, value, callback) {\n      if (value !== _this.registerForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      registerForm: {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      registerRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 30,\n          message: '长度在 6 到 30 个字符',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['isLoading'])), {}, {\n    loading: function loading() {\n      return this.isLoading;\n    }\n  }),\n  methods: {\n    handleRegister: function handleRegister() {\n      var _this2 = this;\n      this.$refs.registerForm.validate(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(valid) {\n          var _this2$registerForm, username, email, password, confirmPassword, userData, errorMsg;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!valid) {\n                  _context.next = 20;\n                  break;\n                }\n                _context.prev = 1;\n                // 使用解构赋值并实际使用confirmPassword变量\n                _this2$registerForm = _this2.registerForm, username = _this2$registerForm.username, email = _this2$registerForm.email, password = _this2$registerForm.password, confirmPassword = _this2$registerForm.confirmPassword; // 确认两次密码输入一致\n                if (!(password !== confirmPassword)) {\n                  _context.next = 6;\n                  break;\n                }\n                _this2.$message.error('两次输入密码不一致');\n                return _context.abrupt(\"return\");\n              case 6:\n                // 实际注册只需要传递username, email, password\n                userData = {\n                  username: username,\n                  email: email,\n                  password: password\n                };\n                _context.next = 9;\n                return _this2.$store.dispatch('register', userData);\n              case 9:\n                _this2.$message.success('注册成功');\n                _this2.$router.push('/');\n                _context.next = 18;\n                break;\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                errorMsg = '注册失败';\n                if (_context.t0.response && _context.t0.response.data) {\n                  errorMsg = _context.t0.response.data.message || errorMsg;\n                }\n                _this2.$message.error(errorMsg);\n              case 18:\n                _context.next = 22;\n                break;\n              case 20:\n                console.log('表单验证失败');\n                return _context.abrupt(\"return\", false);\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[1, 13]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};","map":{"version":3,"names":["AppLayout","mapGetters","name","components","data","_this","validateConfirmPassword","rule","value","callback","registerForm","password","Error","username","email","confirmPassword","registerRules","required","message","trigger","min","max","type","validator","computed","_objectSpread","loading","isLoading","methods","handleRegister","_this2","$refs","validate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","valid","_this2$registerForm","userData","errorMsg","wrap","_callee$","_context","prev","next","$message","error","abrupt","$store","dispatch","success","$router","push","t0","response","console","log","stop","_x","apply","arguments"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n  <app-layout>\r\n    <div class=\"register-container\">\r\n      <div class=\"register-card\">\r\n        <div class=\"register-header\">\r\n          <h2 class=\"title\">日志态势感知系统</h2>\r\n          <p class=\"subtitle\">创建新账户</p>\r\n        </div>\r\n        \r\n        <el-form\r\n          ref=\"registerForm\"\r\n          :model=\"registerForm\"\r\n          :rules=\"registerRules\"\r\n          class=\"register-form\"\r\n          label-position=\"top\"\r\n          @submit.native.prevent=\"handleRegister\">\r\n          \r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input \r\n              v-model=\"registerForm.username\"\r\n              prefix-icon=\"el-icon-user\"\r\n              placeholder=\"请输入用户名\"\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"邮箱\" prop=\"email\">\r\n            <el-input \r\n              v-model=\"registerForm.email\"\r\n              prefix-icon=\"el-icon-message\"\r\n              placeholder=\"请输入邮箱\"\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input \r\n              v-model=\"registerForm.password\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"请输入密码\"\r\n              show-password\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n            <el-input \r\n              v-model=\"registerForm.confirmPassword\"\r\n              prefix-icon=\"el-icon-lock\"\r\n              placeholder=\"请再次输入密码\"\r\n              show-password\r\n              clearable>\r\n            </el-input>\r\n          </el-form-item>\r\n          \r\n          <el-form-item>\r\n            <el-button \r\n              :loading=\"loading\"\r\n              type=\"primary\"\r\n              class=\"register-button\"\r\n              @click=\"handleRegister\">\r\n              注册\r\n            </el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n        \r\n        <div class=\"register-footer\">\r\n          <p>已有账户？ <router-link to=\"/login\">立即登录</router-link></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </app-layout>\r\n</template>\r\n\r\n<script>\r\nimport AppLayout from '@/components/AppLayout.vue'\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Register',\r\n  components: {\r\n    AppLayout\r\n  },\r\n  data() {\r\n    // 确认密码的验证规则\r\n    const validateConfirmPassword = (rule, value, callback) => {\r\n      if (value !== this.registerForm.password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    \r\n    return {\r\n      registerForm: {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      },\r\n      registerRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, max: 30, message: '长度在 6 到 30 个字符', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n          { validator: validateConfirmPassword, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading']),\r\n    loading() {\r\n      return this.isLoading\r\n    }\r\n  },\r\n  methods: {\r\n    handleRegister() {\r\n      this.$refs.registerForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            // 使用解构赋值并实际使用confirmPassword变量\r\n            const { username, email, password, confirmPassword } = this.registerForm;\r\n            \r\n            // 确认两次密码输入一致\r\n            if (password !== confirmPassword) {\r\n              this.$message.error('两次输入密码不一致');\r\n              return;\r\n            }\r\n            \r\n            // 实际注册只需要传递username, email, password\r\n            const userData = { username, email, password };\r\n            \r\n            await this.$store.dispatch('register', userData)\r\n            this.$message.success('注册成功')\r\n            this.$router.push('/')\r\n          } catch (error) {\r\n            let errorMsg = '注册失败'\r\n            if (error.response && error.response.data) {\r\n              errorMsg = error.response.data.message || errorMsg\r\n            }\r\n            this.$message.error(errorMsg)\r\n          }\r\n        } else {\r\n          console.log('表单验证失败')\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.register-card {\r\n  width: 400px;\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.register-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.register-header .title {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  color: #303133;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.register-header .subtitle {\r\n  margin: 0;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n\r\n.register-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.register-button {\r\n  width: 100%;\r\n}\r\n\r\n.register-footer {\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #606266;\r\n}\r\n\r\n.register-footer a {\r\n  color: #409EFF;\r\n  text-decoration: none;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}