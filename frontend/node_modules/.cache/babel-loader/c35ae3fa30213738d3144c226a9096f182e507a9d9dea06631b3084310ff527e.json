{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/\\u5434\\u5929\\u7FFC/OneDrive/\\u684C\\u9762/\\u5F02\\u5E38\\u68C0\\u6D4B/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/\\u5434\\u5929\\u7FFC/OneDrive/\\u684C\\u9762/\\u5F02\\u5E38\\u68C0\\u6D4B/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport AppLayout from '@/components/AppLayout.vue';\nexport default {\n  name: 'Home',\n  components: {\n    AppLayout: AppLayout\n  },\n  data: function data() {\n    return {\n      recentFiles: []\n    };\n  },\n  created: function created() {\n    this.fetchRecentFiles();\n  },\n  methods: {\n    fetchRecentFiles: function fetchRecentFiles() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.$store.dispatch('fetchLogFiles');\n            case 3:\n              response = _context.sent;\n              _this.recentFiles = response.files.slice(0, 5); // 只显示最近5个文件\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching files:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    getStatusType: function getStatusType(status) {\n      var statusMap = {\n        'pending': 'info',\n        'processing': 'warning',\n        'completed': 'success',\n        'failed': 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n    getStatusText: function getStatusText(status) {\n      var statusMap = {\n        'pending': '等待处理',\n        'processing': '处理中',\n        'completed': '已完成',\n        'failed': '处理失败'\n      };\n      return statusMap[status] || status;\n    },\n    viewFile: function viewFile(file) {\n      this.$router.push(\"/analysis/\".concat(file.id));\n    },\n    goToUpload: function goToUpload() {\n      this.$router.push('/upload');\n    },\n    goToFiles: function goToFiles() {\n      this.$router.push('/files');\n    },\n    goToDashboard: function goToDashboard() {\n      this.$router.push('/dashboard');\n    }\n  }\n};","map":{"version":3,"names":["AppLayout","name","components","data","recentFiles","created","fetchRecentFiles","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","$store","dispatch","sent","files","slice","t0","console","error","stop","getStatusType","status","statusMap","getStatusText","viewFile","file","$router","push","concat","id","goToUpload","goToFiles","goToDashboard"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n  <app-layout>\r\n    <div class=\"home-page\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :xs=\"24\" :md=\"8\">\r\n          <div class=\"feature-card\">\r\n            <div class=\"feature-icon\">\r\n              <i class=\"el-icon-upload\"></i>\r\n            </div>\r\n            <h3 class=\"feature-title\">上传日志</h3>\r\n            <p class=\"feature-desc\">支持各种离线日志文件的上传，包括系统日志、认证日志等。</p>\r\n            <el-button type=\"primary\" @click=\"goToUpload\">开始上传</el-button>\r\n          </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :md=\"8\">\r\n          <div class=\"feature-card\">\r\n            <div class=\"feature-icon\">\r\n              <i class=\"el-icon-data-analysis\"></i>\r\n            </div>\r\n            <h3 class=\"feature-title\">日志分析</h3>\r\n            <p class=\"feature-desc\">智能分析日志内容，提取重要信息，检测异常行为和潜在威胁。</p>\r\n            <el-button type=\"primary\" @click=\"goToFiles\">查看分析</el-button>\r\n          </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :md=\"8\">\r\n          <div class=\"feature-card\">\r\n            <div class=\"feature-icon\">\r\n              <i class=\"el-icon-monitor\"></i>\r\n            </div>\r\n            <h3 class=\"feature-title\">态势感知</h3>\r\n            <p class=\"feature-desc\">基于日志分析结果，展示系统安全态势，预测潜在风险和趋势。</p>\r\n            <el-button type=\"primary\" @click=\"goToDashboard\">查看态势</el-button>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n      \r\n      <el-divider content-position=\"center\">最近上传的文件</el-divider>\r\n      \r\n      <el-table\r\n        v-if=\"recentFiles.length > 0\"\r\n        :data=\"recentFiles\"\r\n        stripe\r\n        style=\"width: 100%\">\r\n        <el-table-column\r\n          prop=\"original_filename\"\r\n          label=\"文件名\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"upload_time\"\r\n          label=\"上传时间\"\r\n          width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column\r\n          prop=\"status\"\r\n          label=\"状态\"\r\n          width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getStatusType(scope.row.status)\">\r\n              {{ getStatusText(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          label=\"操作\"\r\n          width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n              size=\"mini\"\r\n              type=\"primary\"\r\n              @click=\"viewFile(scope.row)\"\r\n              :disabled=\"scope.row.status !== 'completed'\">\r\n              查看分析\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <div v-else class=\"no-data\">\r\n        <i class=\"el-icon-document\"></i>\r\n        <p>暂无上传文件</p>\r\n        <el-button type=\"primary\" @click=\"goToUpload\">立即上传</el-button>\r\n      </div>\r\n    </div>\r\n  </app-layout>\r\n</template>\r\n\r\n<script>\r\nimport AppLayout from '@/components/AppLayout.vue'\r\n\r\nexport default {\r\n  name: 'Home',\r\n  components: {\r\n    AppLayout\r\n  },\r\n  data() {\r\n    return {\r\n      recentFiles: []\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchRecentFiles()\r\n  },\r\n  methods: {\r\n    async fetchRecentFiles() {\r\n      try {\r\n        const response = await this.$store.dispatch('fetchLogFiles')\r\n        this.recentFiles = response.files.slice(0, 5) // 只显示最近5个文件\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error)\r\n      }\r\n    },\r\n    getStatusType(status) {\r\n      const statusMap = {\r\n        'pending': 'info',\r\n        'processing': 'warning',\r\n        'completed': 'success',\r\n        'failed': 'danger'\r\n      }\r\n      return statusMap[status] || 'info'\r\n    },\r\n    getStatusText(status) {\r\n      const statusMap = {\r\n        'pending': '等待处理',\r\n        'processing': '处理中',\r\n        'completed': '已完成',\r\n        'failed': '处理失败'\r\n      }\r\n      return statusMap[status] || status\r\n    },\r\n    viewFile(file) {\r\n      this.$router.push(`/analysis/${file.id}`)\r\n    },\r\n    goToUpload() {\r\n      this.$router.push('/upload')\r\n    },\r\n    goToFiles() {\r\n      this.$router.push('/files')\r\n    },\r\n    goToDashboard() {\r\n      this.$router.push('/dashboard')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-page {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.feature-card {\r\n  height: 100%;\r\n  padding: 30px;\r\n  text-align: center;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.feature-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.feature-icon {\r\n  font-size: 48px;\r\n  color: #409EFF;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.feature-title {\r\n  font-size: 20px;\r\n  color: #303133;\r\n  margin: 0 0 15px 0;\r\n}\r\n\r\n.feature-desc {\r\n  font-size: 14px;\r\n  color: #606266;\r\n  line-height: 1.5;\r\n  margin-bottom: 20px;\r\n  height: 60px;\r\n}\r\n\r\n.el-divider {\r\n  margin: 30px 0;\r\n}\r\n\r\n.no-data {\r\n  padding: 50px 0;\r\n  text-align: center;\r\n  color: #909399;\r\n}\r\n\r\n.no-data i {\r\n  font-size: 48px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.no-data p {\r\n  margin-bottom: 20px;\r\n}\r\n</style> "],"mappings":";;;;AAuFA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF,SAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAD,gBAAA,WAAAA,iBAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAV,KAAA,CAAAW,MAAA,CAAAC,QAAA;YAAA;cAAAP,QAAA,GAAAG,QAAA,CAAAK,IAAA;cACAb,KAAA,CAAAJ,WAAA,GAAAS,QAAA,CAAAS,KAAA,CAAAC,KAAA;cAAAP,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAQ,EAAA,GAAAR,QAAA;cAEAS,OAAA,CAAAC,KAAA,0BAAAV,QAAA,CAAAQ,EAAA;YAAA;YAAA;cAAA,OAAAR,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAf,OAAA;MAAA;IAEA;IACAgB,aAAA,WAAAA,cAAAC,MAAA;MACA,IAAAC,SAAA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,SAAA,CAAAD,MAAA;IACA;IACAE,aAAA,WAAAA,cAAAF,MAAA;MACA,IAAAC,SAAA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,SAAA,CAAAD,MAAA,KAAAA,MAAA;IACA;IACAG,QAAA,WAAAA,SAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,cAAAC,MAAA,CAAAH,IAAA,CAAAI,EAAA;IACA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAJ,OAAA,CAAAC,IAAA;IACA;IACAI,SAAA,WAAAA,UAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;IACA;IACAK,aAAA,WAAAA,cAAA;MACA,KAAAN,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}