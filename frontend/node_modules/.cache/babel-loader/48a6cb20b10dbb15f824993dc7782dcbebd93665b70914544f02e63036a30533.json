{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/\\u5434\\u5929\\u7FFC/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/\\u5434\\u5929\\u7FFC/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/\\u5434\\u5929\\u7FFC/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.timers.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 30,\n          message: '长度在 6 到 30 个字符',\n          trigger: 'blur'\n        }]\n      },\n      rememberMe: false,\n      redirect: undefined\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['isLoading'])), {}, {\n    loading: function loading() {\n      return this.isLoading;\n    }\n  }),\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    handleLogin: function handleLogin() {\n      var _this = this;\n      this.$refs.loginForm.validate(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(valid) {\n          var response, errorMsg;\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                if (!valid) {\n                  _context.next = 22;\n                  break;\n                }\n                _context.prev = 1;\n                console.log('开始登录请求，用户名:', _this.loginForm.username);\n\n                // 清除任何之前的登录状态\n                _this.$store.dispatch('logout');\n\n                // 尝试登录\n                _context.next = 6;\n                return _this.$store.dispatch('login', _this.loginForm);\n              case 6:\n                response = _context.sent;\n                console.log('登录响应:', response);\n\n                // 验证登录状态\n                if (!(!_this.$store.state.authenticated || !_this.$store.state.token)) {\n                  _context.next = 10;\n                  break;\n                }\n                throw new Error('登录后状态无效');\n              case 10:\n                _this.$message.success('登录成功');\n\n                // 延迟后跳转，确保状态已更新\n                setTimeout(function () {\n                  // 重定向到之前尝试访问的页面或首页\n                  var path = _this.redirect || '/';\n                  console.log('重定向到:', path);\n                  _this.$router.push({\n                    path: path\n                  });\n                }, 300);\n                _context.next = 20;\n                break;\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](1);\n                console.error('登录处理错误:', _context.t0);\n                errorMsg = '登录失败';\n                if (_context.t0.response && _context.t0.response.data) {\n                  console.error('服务器错误响应:', _context.t0.response.data);\n                  errorMsg = _context.t0.response.data.message || errorMsg;\n                } else if (_context.t0.message) {\n                  errorMsg = _context.t0.message;\n                }\n                _this.$message.error(errorMsg);\n              case 20:\n                _context.next = 24;\n                break;\n              case 22:\n                console.log('表单验证失败');\n                return _context.abrupt(\"return\", false);\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee, null, [[1, 14]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","loginForm","username","password","loginRules","required","message","trigger","min","max","rememberMe","redirect","undefined","computed","_objectSpread","loading","isLoading","watch","$route","handler","route","query","immediate","methods","handleLogin","_this","$refs","validate","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","valid","response","errorMsg","wrap","_callee$","_context","prev","next","console","log","$store","dispatch","sent","state","authenticated","token","Error","$message","success","setTimeout","path","$router","push","t0","error","abrupt","stop","_x","apply","arguments"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <div class=\"login-header\">\r\n        <h2 class=\"title\">日志态势感知系统</h2>\r\n        <p class=\"subtitle\">登录您的账户</p>\r\n      </div>\r\n      \r\n      <el-form\r\n        ref=\"loginForm\"\r\n        :model=\"loginForm\"\r\n        :rules=\"loginRules\"\r\n        class=\"login-form\"\r\n        label-position=\"top\"\r\n        @submit.native.prevent=\"handleLogin\">\r\n        \r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input \r\n            v-model=\"loginForm.username\"\r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"请输入用户名\"\r\n            clearable>\r\n          </el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input \r\n            v-model=\"loginForm.password\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            placeholder=\"请输入密码\"\r\n            show-password\r\n            clearable>\r\n          </el-input>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-checkbox v-model=\"rememberMe\">记住我</el-checkbox>\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button \r\n            :loading=\"loading\"\r\n            type=\"primary\"\r\n            class=\"login-button\"\r\n            @click=\"handleLogin\">\r\n            登录\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <div class=\"login-footer\">\r\n        <p>还没有账户？ <router-link to=\"/register\">立即注册</router-link></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, max: 30, message: '长度在 6 到 30 个字符', trigger: 'blur' }\r\n        ]\r\n      },\r\n      rememberMe: false,\r\n      redirect: undefined\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading']),\r\n    loading() {\r\n      return this.isLoading\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler(route) {\r\n        this.redirect = route.query && route.query.redirect\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            console.log('开始登录请求，用户名:', this.loginForm.username);\r\n            \r\n            // 清除任何之前的登录状态\r\n            this.$store.dispatch('logout');\r\n            \r\n            // 尝试登录\r\n            const response = await this.$store.dispatch('login', this.loginForm)\r\n            console.log('登录响应:', response);\r\n            \r\n            // 验证登录状态\r\n            if (!this.$store.state.authenticated || !this.$store.state.token) {\r\n              throw new Error('登录后状态无效');\r\n            }\r\n            \r\n            this.$message.success('登录成功')\r\n            \r\n            // 延迟后跳转，确保状态已更新\r\n            setTimeout(() => {\r\n              // 重定向到之前尝试访问的页面或首页\r\n              const path = this.redirect || '/';\r\n              console.log('重定向到:', path);\r\n              this.$router.push({ path });\r\n            }, 300);\r\n            \r\n          } catch (error) {\r\n            console.error('登录处理错误:', error);\r\n            \r\n            let errorMsg = '登录失败';\r\n            if (error.response && error.response.data) {\r\n              console.error('服务器错误响应:', error.response.data);\r\n              errorMsg = error.response.data.message || errorMsg;\r\n            } else if (error.message) {\r\n              errorMsg = error.message;\r\n            }\r\n            \r\n            this.$message.error(errorMsg);\r\n          }\r\n        } else {\r\n          console.log('表单验证失败');\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 30px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.login-header .title {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  color: #303133;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.login-header .subtitle {\r\n  margin: 0;\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n\r\n.login-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n}\r\n\r\n.login-footer {\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #606266;\r\n}\r\n\r\n.login-footer a {\r\n  color: #409EFF;\r\n  text-decoration: none;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}