{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.parse-float.js\";\nexport default {\n  name: 'UploadProgress',\n  props: {\n    file: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    progressValue: function progressValue() {\n      return this.file.processing_progress || 0;\n    },\n    progressText: function progressText() {\n      return \"\".concat(this.progressValue.toFixed(1), \"%\");\n    },\n    progressStatus: function progressStatus() {\n      if (this.file.status === 'completed') {\n        return 'success';\n      } else if (this.file.status === 'failed') {\n        return 'exception';\n      }\n      return '';\n    },\n    progressColor: function progressColor() {\n      if (this.file.status === 'pending') {\n        return '#909399';\n      } else if (this.file.status === 'processing') {\n        return '#409EFF';\n      } else if (this.file.status === 'completed') {\n        return '#67C23A';\n      } else if (this.file.status === 'failed') {\n        return '#F56C6C';\n      }\n      return '';\n    },\n    statusText: function statusText() {\n      var statusMap = {\n        'pending': '等待处理',\n        'processing': '处理中',\n        'completed': '已完成',\n        'failed': '处理失败'\n      };\n      return statusMap[this.file.status] || this.file.status;\n    }\n  },\n  methods: {\n    formatFileSize: function formatFileSize(bytes) {\n      if (bytes === 0) return '0 B';\n      var k = 1024;\n      var sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n      var i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n  }\n};","map":{"version":3,"names":["name","props","file","type","Object","required","computed","progressValue","processing_progress","progressText","concat","toFixed","progressStatus","status","progressColor","statusText","statusMap","methods","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow"],"sources":["src/components/UploadProgress.vue"],"sourcesContent":["<template>\r\n  <div class=\"upload-progress\">\r\n    <div class=\"progress-info\">\r\n      <span class=\"file-name\">{{ file.original_filename }}</span>\r\n      <span class=\"progress-percent\">{{ progressText }}</span>\r\n    </div>\r\n    <el-progress \r\n      :percentage=\"progressValue\" \r\n      :status=\"progressStatus\"\r\n      :stroke-width=\"12\"\r\n      :color=\"progressColor\">\r\n    </el-progress>\r\n    <div class=\"file-meta\">\r\n      <span class=\"file-size\">大小: {{ formatFileSize(file.file_size) }}</span>\r\n      <span class=\"file-status\">状态: {{ statusText }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UploadProgress',\r\n  props: {\r\n    file: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    progressValue() {\r\n      return this.file.processing_progress || 0\r\n    },\r\n    progressText() {\r\n      return `${this.progressValue.toFixed(1)}%`\r\n    },\r\n    progressStatus() {\r\n      if (this.file.status === 'completed') {\r\n        return 'success'\r\n      } else if (this.file.status === 'failed') {\r\n        return 'exception'\r\n      }\r\n      return ''\r\n    },\r\n    progressColor() {\r\n      if (this.file.status === 'pending') {\r\n        return '#909399'\r\n      } else if (this.file.status === 'processing') {\r\n        return '#409EFF'\r\n      } else if (this.file.status === 'completed') {\r\n        return '#67C23A'\r\n      } else if (this.file.status === 'failed') {\r\n        return '#F56C6C'\r\n      }\r\n      return ''\r\n    },\r\n    statusText() {\r\n      const statusMap = {\r\n        'pending': '等待处理',\r\n        'processing': '处理中',\r\n        'completed': '已完成',\r\n        'failed': '处理失败'\r\n      }\r\n      return statusMap[this.file.status] || this.file.status\r\n    }\r\n  },\r\n  methods: {\r\n    formatFileSize(bytes) {\r\n      if (bytes === 0) return '0 B'\r\n      const k = 1024\r\n      const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.upload-progress {\r\n  margin-bottom: 15px;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.progress-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.file-name {\r\n  font-weight: 500;\r\n  color: #303133;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 70%;\r\n}\r\n\r\n.progress-percent {\r\n  color: #606266;\r\n  font-weight: 500;\r\n}\r\n\r\n.file-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 8px;\r\n  font-size: 13px;\r\n  color: #909399;\r\n}\r\n</style> "],"mappings":";;AAoBA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA,WAAAA,cAAA;MACA,YAAAL,IAAA,CAAAM,mBAAA;IACA;IACAC,YAAA,WAAAA,aAAA;MACA,UAAAC,MAAA,MAAAH,aAAA,CAAAI,OAAA;IACA;IACAC,cAAA,WAAAA,eAAA;MACA,SAAAV,IAAA,CAAAW,MAAA;QACA;MACA,gBAAAX,IAAA,CAAAW,MAAA;QACA;MACA;MACA;IACA;IACAC,aAAA,WAAAA,cAAA;MACA,SAAAZ,IAAA,CAAAW,MAAA;QACA;MACA,gBAAAX,IAAA,CAAAW,MAAA;QACA;MACA,gBAAAX,IAAA,CAAAW,MAAA;QACA;MACA,gBAAAX,IAAA,CAAAW,MAAA;QACA;MACA;MACA;IACA;IACAE,UAAA,WAAAA,WAAA;MACA,IAAAC,SAAA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,SAAA,MAAAd,IAAA,CAAAW,MAAA,UAAAX,IAAA,CAAAW,MAAA;IACA;EACA;EACAI,OAAA;IACAC,cAAA,WAAAA,eAAAC,KAAA;MACA,IAAAA,KAAA;MACA,IAAAC,CAAA;MACA,IAAAC,KAAA;MACA,IAAAC,CAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,GAAA,CAAAN,KAAA,IAAAI,IAAA,CAAAE,GAAA,CAAAL,CAAA;MACA,OAAAM,UAAA,EAAAP,KAAA,GAAAI,IAAA,CAAAI,GAAA,CAAAP,CAAA,EAAAE,CAAA,GAAAX,OAAA,aAAAU,KAAA,CAAAC,CAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}