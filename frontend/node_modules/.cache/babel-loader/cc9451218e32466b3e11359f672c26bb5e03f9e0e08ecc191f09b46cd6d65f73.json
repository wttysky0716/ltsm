{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/\\u5434\\u5929\\u7FFC/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/\\u5434\\u5929\\u7FFC/log-analysis-system/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.keys.js\";\nexport default {\n  name: 'App',\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token, user;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // 从本地存储恢复用户登录状态\n            token = localStorage.getItem('token');\n            user = localStorage.getItem('user');\n            if (!(token && user)) {\n              _context.next = 15;\n              break;\n            }\n            _context.prev = 3;\n            // 设置状态\n            _this.$store.commit('setToken', token);\n            _this.$store.commit('setUser', JSON.parse(user));\n            _this.$store.commit('setAuthenticated', true);\n\n            // 验证令牌有效性\n            _context.next = 9;\n            return _this.validateToken();\n          case 9:\n            _context.next = 15;\n            break;\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](3);\n            console.error('Failed to restore user session:', _context.t0);\n            // 如果验证失败，清除本地存储的会话信息\n            _this.$store.dispatch('logout');\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 11]]);\n    }))();\n  },\n  methods: {\n    validateToken: function validateToken() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _this2.$http.get('/auth/validate');\n            case 3:\n              console.log('Token validated successfully');\n              _context2.next = 10;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Token validation failed:', _context2.t0);\n              throw _context2.t0;\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 6]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["name","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","user","wrap","_callee$","_context","prev","next","localStorage","getItem","$store","commit","JSON","parse","validateToken","t0","console","error","dispatch","stop","methods","_this2","_callee2","_callee2$","_context2","$http","get","log"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <router-view />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n  async created() {\r\n    // 从本地存储恢复用户登录状态\r\n    const token = localStorage.getItem('token')\r\n    const user = localStorage.getItem('user')\r\n    \r\n    if (token && user) {\r\n      try {\r\n        // 设置状态\r\n        this.$store.commit('setToken', token)\r\n        this.$store.commit('setUser', JSON.parse(user))\r\n        this.$store.commit('setAuthenticated', true)\r\n        \r\n        // 验证令牌有效性\r\n        await this.validateToken()\r\n        \r\n      } catch (error) {\r\n        console.error('Failed to restore user session:', error)\r\n        // 如果验证失败，清除本地存储的会话信息\r\n        this.$store.dispatch('logout')\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async validateToken() {\r\n      try {\r\n        // 使用验证接口检查令牌是否有效\r\n        await this.$http.get('/auth/validate')\r\n        console.log('Token validated successfully')\r\n      } catch (error) {\r\n        console.error('Token validation failed:', error)\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  height: 100%;\r\n}\r\n</style> "],"mappings":";;;AAOA;EACAA,IAAA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,KAAA,EAAAC,IAAA;MAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACA;YACAN,KAAA,GAAAO,YAAA,CAAAC,OAAA;YACAP,IAAA,GAAAM,YAAA,CAAAC,OAAA;YAAA,MAEAR,KAAA,IAAAC,IAAA;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAC,IAAA;YAEA;YACAV,KAAA,CAAAc,MAAA,CAAAC,MAAA,aAAAV,KAAA;YACAL,KAAA,CAAAc,MAAA,CAAAC,MAAA,YAAAC,IAAA,CAAAC,KAAA,CAAAX,IAAA;YACAN,KAAA,CAAAc,MAAA,CAAAC,MAAA;;YAEA;YAAAN,QAAA,CAAAE,IAAA;YAAA,OACAX,KAAA,CAAAkB,aAAA;UAAA;YAAAT,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;YAGAW,OAAA,CAAAC,KAAA,oCAAAZ,QAAA,CAAAU,EAAA;YACA;YACAnB,KAAA,CAAAc,MAAA,CAAAQ,QAAA;UAAA;UAAA;YAAA,OAAAb,QAAA,CAAAc,IAAA;QAAA;MAAA,GAAAnB,OAAA;IAAA;EAGA;EACAoB,OAAA;IACAN,aAAA,WAAAA,cAAA;MAAA,IAAAO,MAAA;MAAA,OAAAxB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAuB,SAAA;QAAA,OAAAxB,mBAAA,GAAAK,IAAA,UAAAoB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlB,IAAA,GAAAkB,SAAA,CAAAjB,IAAA;YAAA;cAAAiB,SAAA,CAAAlB,IAAA;cAAAkB,SAAA,CAAAjB,IAAA;cAAA,OAGAc,MAAA,CAAAI,KAAA,CAAAC,GAAA;YAAA;cACAV,OAAA,CAAAW,GAAA;cAAAH,SAAA,CAAAjB,IAAA;cAAA;YAAA;cAAAiB,SAAA,CAAAlB,IAAA;cAAAkB,SAAA,CAAAT,EAAA,GAAAS,SAAA;cAEAR,OAAA,CAAAC,KAAA,6BAAAO,SAAA,CAAAT,EAAA;cAAA,MAAAS,SAAA,CAAAT,EAAA;YAAA;YAAA;cAAA,OAAAS,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAGA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}